<style lang="less">
.quote {
  margin: 20rpx;
  background-color: #d7d7d7;
  border-left: solid 10rpx #a4a4a4;
}
</style>

<template>
    <view class="page">
        <view class="page_hd" wx:if="{{noticeText}}">
            <noticeBar :text.sync="noticeText" componentId="noticeBar" :icon="icon"></noticeBar>
        </view>
        <view class="page_bd">
            <view class="padding-10 font-12">学号</view>
            <view style="background-color: #fff;">
                <input-id :config.sync="idconfig" @onInput.user="onIdInput"></input-id>
            </view>
            <view class="padding-10 font-12">密码</view>
            <view style="background-color: #fff;">
                <input-password :config.sync="pwdconfig" @onInput.user="onPwdInput"></input-password>
            </view>
            <view class="padding-10">
                <button class="btn-loading" type="primary" @tap="onConfirm">确定
                    <view hidden="{{hideBtnLoading}}">
                        <loading type="circle"/>
                    </view>
                </button>
            </view>
        </view>
        <view class="page_ft">
            <view wx:if="{{oneContent}}" class="quote">
                <view class="padding-10 font-14">
                    <text>{{oneContent}}</text>
                    <view class="text-pull-right padding-10 font-14">{{oneAuthor}}</view>
                </view>
            </view>
            <!-- <view style="height: {{showAd ? auto : 0}}">
            <ad unit-id="adunit-ef4e486fa72774b2"></ad>
            </view>-->
        </view>
    </view>
</template>

<script>
import wepy from 'wepy'
import Input from '../kaiui/input/index'
import Loading from '../kaiui/loading/index'
import NoticeBar from '../kaiui/noticeBar/index'

let gotResult = false

const db = wx.cloud.database()

export default class Index extends wepy.page {
    config = {
        navigationBarTitleText: '学分积'
    }
    components = {
        'input-id': Input,
        'input-password': Input,
        'loading': Loading,
        'noticeBar': NoticeBar
    }

    mixins = []

    data = {
        idconfig: {
            value: wepy.getStorageSync('username') || '',
            adjust: false,
            placeholder: '请输入学号',
            inputType: 'number',
            maxlength: 10,
            clear: true
        },
        pwdconfig: {
            value: wepy.getStorageSync('passwd') || '',
            adjust: false,
            placeholder: '请输入密码',
            inputType: 'password',
            maxlength: 40,
            clear: true
        },
        oneContent: '',
        oneAuthor: '',
        hideBtnLoading: true,
        showAd: false,
        noticeText: '',
        icon: true
    }

    computed = {}

    methods = {
        async onConfirm() {
            wepy.setStorage({
                key: 'username',
                data: this.$parent.globalData.username
            })
            wepy.setStorage({
                key: 'passwd',
                data: this.$parent.globalData.password
            })
            if (!gotResult) {
                let taskResult = await this.queryGrade(this.$parent.globalData.username, this.$parent.globalData.password)
                if (taskResult !== 0) {
                    return
                }
            }
            wepy.navigateTo({
                url: './grade'
            })
        },
        onIdInput(e) {
            this.$parent.globalData.username = e
            gotResult = false
            wepy.removeStorage({
                key: 'switchItems'
            })
        },
        onPwdInput(e) {
            this.$parent.globalData.password = e
            wepy.removeStorage({
                key: 'switchItems'
            })
        }
    }

    async getOneISAll() {
        let res = await db.collection('one-sentence').doc('6cc46607-d6b0-4cf8-b46e-c3df6507a949').get()
        this.oneContent = res.data.content
        this.oneAuthor = res.data.from
        this.$apply()
    }

    async getNotice() {
        let res = await db.collection('one-sentence').doc('notice').get()
        this.noticeText = res.data.content
        if (this.noticeText) {
            this.$invoke('noticeBar', 'initNoticeBarScroll')
        }
        this.$apply()
    }

    async queryGrade(username, password, showLoading = true) {
        const self = this
        if (username && password.length > 5) {
            self.hideBtnLoading = false
            return new Promise((resolve, reject) => {
                if (showLoading) {
                    wepy.showLoading({
                        title: 'Loading...',
                        mask: true
                    })
                }
                wx.cloud.callFunction({
                    name: 'getGrade',
                    data: {
                        id: username,
                        password: password
                    }
                }).then(function (res) {
                    if (res.result.code === 0) {
                        self.hideBtnLoading = true
                        gotResult = true
                        self.$parent.globalData.result = res.result.data
                        self.$apply()
                        if (showLoading) wepy.hideLoading()
                        resolve(0)
                    } else {
                        self.hideBtnLoading = true
                        self.$apply()
                        if (showLoading) wepy.hideLoading()
                        wepy.showToast({
                            title: res.result.data,
                            icon: 'none',
                            duration: 2000,
                            mask: true
                        })
                        self.$apply()
                        resolve(res.result.data)
                    }
                })
            })
        } else {
            return new Promise((resolve, reject) => {
                wepy.showToast({
                    title: '信息输入有误',
                    icon: 'none',
                    duration: 2000,
                    mask: true
                })
                resolve('invalid username or password')
            })
        }
    }

    onLoad() {
        this.getOneISAll()
        this.getNotice()
        if (this.$parent.globalData.username.length === 10 && this.$parent.globalData.password.length > 5) {
            this.queryGrade(this.$parent.globalData.username, this.$parent.globalData.password, false)
        }
        setTimeout(() => {
            this.showAd = true
            this.$apply()
        }, 30000)
    }

    onShow() {
        gotResult = false
    }
    onShareAppMessage(res) {
        return {
            title: '学分积查询',
            path: '/pages/index',
            imageUrl: '../imgs/papercraft.png'
        }
    }
}
</script>
