<style lang="less">
.quote {
    margin: 20rpx;
    background-color: #d7d7d7;
    border-left: solid 10rpx #a4a4a4;
}
</style>

<template>
<view class="page">
    <view class="page_bd">
        <view class="padding-10 font-12">学号</view>
        <view style="background-color: #fff;">
            <input-id :config.sync="idconfig" @onInput.user="onIdInput"></input-id>
        </view>
        <view class="padding-10 font-12">密码</view>
        <view style="background-color: #fff;">
            <input-password :config.sync="pwdconfig" @onInput.user="onPwdInput"></input-password>
        </view>
        <view class="padding-10">
            <button class="btn-loading" type="primary" @tap="onConfirm">
                确定
                <view hidden="{{hideBtnLoading}}">
                    <loading type="circle"/>
                </view>
            </button>
        </view>
    </view>
    <view class="page_ft">
        <view hidden="{{!oneContent}}" class="quote">
            <view class="padding-10 font-14">
                <text>
                    {{oneContent}}
                </text>
                <view class="text-pull-right padding-10 font-14">
                    {{oneAuthor}}
                </view>
            </view>
        </view>
        <ad unit-id="adunit-ef4e486fa72774b2"></ad>
    </view>
</view>
</template>

<script>
import wepy from 'wepy'
import Input from '../kaiui/input/index'
import Loading from '../kaiui/loading/index'

import JSEncrypt from '../utils/rsa'
const encrypt = new JSEncrypt()
const publicKey = 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0cnl7FY0dSG5lgpIq/Yb' +
    'wqhykm1DYGFb0kD0IcjO4YlmK61EtZM4NWr6tNDNElN6eawLKZDxtzYaFnOUAFwx' +
    'PY75QRs+DE5coKxulPRDzboIauCdychQtR+H8adS+4i3gOmFRPjqoyqp+qchNeVk' +
    't4Zv9yal7+6GpEFZ2uXVJVZoBGS5H57s2dojP4z8by6DlQtMZq2O2tGpPTnG7Y3t' +
    '+hR6HVri/9eiSjfzLhT3XO3Jcnykdz7Bb7LUWMmreQHIuY7res2wHqX8LyTiNTib' +
    'lzbPiw4MbY/xZ4B1alCKVSZXZFG0om6CkHAkw0Q8CLbYU8VN50I0VXaJJ7bdn4dk' +
    '2QIDAQAB'
encrypt.setPublicKey(publicKey)

const queryGradeUrl = 'https://wx.seekecho.cn/query_grade'
let gotResult = false

export default class Index extends wepy.page {
    config = {
        navigationBarTitleText: '学分积'
    }
    components = {
        'input-id': Input,
        'input-password': Input,
        'loading': Loading
    }

    mixins = []

    data = {
        idconfig: {
            value: wepy.getStorageSync('username') || '',
            adjust: false,
            placeholder: '请输入学号',
            inputType: 'number',
            maxlength: 10,
            clear: true
        },
        pwdconfig: {
            value: wepy.getStorageSync('passwd') || '',
            adjust: false,
            placeholder: '请输入密码',
            inputType: 'password',
            maxlength: 40,
            clear: true
        },
        oneContent: '',
        oneAuthor: '',
        hideBtnLoading: true
    }

    computed = {}

    methods = {
        async onConfirm() {
            wepy.setStorage({
                key: 'username',
                data: this.$parent.globalData.username
            })
            wepy.setStorage({
                key: 'passwd',
                data: this.$parent.globalData.password
            })
            if (!gotResult) {
                let taskResult = await this.queryGrade(this.$parent.globalData.username, this.$parent.globalData.password)
                if (taskResult !== 0) {
                    return
                }
            }
            wepy.navigateTo({
                url: './grade'
            })
        },
        onIdInput(e) {
            this.$parent.globalData.username = e
            wepy.removeStorage({
                key: 'switchItems'
            })
        },
        onPwdInput(e) {
            this.$parent.globalData.password = e
            wepy.removeStorage({
                key: 'switchItems'
            })
        }
    }

    async getOneISAll() {
        let res = await wepy.request('https://wx.seekecho.cn/one/api/channel/one/0/0')
        this.oneContent = res.data.data.content_list[0].forward
        this.oneAuthor = 'by ' + res.data.data.content_list[0].words_info
        this.$apply()
    }

    async queryGrade(username, password, showLoading = true) {
        const self = this
        if (username && password.length > 5) {
            self.hideBtnLoading = false
            return new Promise((resolve, reject) => {
                if (showLoading) {
                    wepy.showLoading({
                        title: 'Loading...',
                        mask: true
                    })
                }
                wepy.request({
                    url: queryGradeUrl,
                    data: {
                        id: username,
                        passwd: encrypt.encrypt(password)
                    },
                    method: 'POST',
                    dataType: 'json'
                }).then(function(res) {
                    if (res.data.code === '0') {
                        self.hideBtnLoading = true
                        gotResult = true
                        self.$parent.globalData.result = res.data.msg
                        self.$apply()
                        if (showLoading) wepy.hideLoading()
                        resolve(0)
                    } else {
                        self.hideBtnLoading = true
                        self.$apply()
                        wepy.showToast({
                            title: res.data.msg,
                            icon: 'none',
                            duration: 2000,
                            mask: true
                        })
                        self.$apply()
                        if (showLoading) wepy.hideLoading()
                        resolve(res.data.msg)
                    }
                    if (res.statusCode === 500 || res.statusCode === 502) {
                        self.hideBtnLoading = true
                        self.$apply()
                        wepy.showToast({
                            title: '服务器错误，请稍候再试',
                            icon: 'none',
                            duration: 2000,
                            mask: true
                        })
                        self.$apply()
                        if (showLoading) wepy.hideLoading()
                        resolve('服务器错误')
                    }
                })
            })
        } else {
            return new Promise((resolve, reject) => {
                wepy.showToast({
                    title: '信息输入有误',
                    icon: 'none',
                    duration: 2000,
                    mask: true
                })
                resolve('invalid username or password')
            })
        }
    }

    onLoad() {
        this.getOneISAll()
        if (this.$parent.globalData.username.length === 10 && this.$parent.globalData.password.length > 5) {
            this.queryGrade(this.$parent.globalData.username, this.$parent.globalData.password, false)
        }
    }

    onShow() {
        gotResult = false
    }
    onShareAppMessage(res) {
        return {
            title: '学分积查询',
            path: '/pages/index',
            imageUrl: '../imgs/papercraft.png'
        }
    }
}
</script>
